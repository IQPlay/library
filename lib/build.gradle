plugins {
    id 'java-library'
    id "org.sonarqube" version "5.1.0.4882"
    id 'maven-publish'
    id 'jacoco'
    id 'org.asciidoctor.jvm.convert' version '4.0.2'
    id 'org.asciidoctor.jvm.pdf' version '4.0.2'
}

test {
    useJUnitPlatform()
}

sonar {
    properties {
        property "sonar.projectKey", "IQPlay_library"
        property "sonar.organization", "iqplay"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

repositories {
    // ðŸ“Œ Utilisation de Maven Central pour les dÃ©pendances
    mavenCentral()
}

dependencies {
    // ðŸ“Œ Ajout de versions prÃ©cises pour Ã©viter les erreurs

    // âœ… Spring Boot Web pour API REST
    implementation 'org.springframework.boot:spring-boot-starter-web:3.2.2'

    // âœ… Jackson pour la gestion des JSON
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.0'

    // âœ… Validation Jakarta pour valider les DTOs
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.2.2'

    // âœ… JUnit pour les tests
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

asciidoctor {
    sourceDir = file('src/docs')
    outputDir = file("${buildDir}/docs/asciidoctor")
}

asciidoctorPdf {
    sourceDir = file('src/docs')
    outputDir = file("${buildDir}/docs/asciidoctorPdf")
}

asciidoctorj {
    requires 'rouge'
    modules {
        diagram.use()
        diagram.version '1.5.16'
    }
    attributes 'build-gradle': file('build.gradle'),
            'sourcedir': project.sourceSets.main.java.srcDirs[0],
            'source-highlighter': 'rouge',
            'rouge-style': 'github',
            'rouge-theme': 'github'
}

jacoco {
    toolVersion = "0.8.12"
}

jacocoTestReport {
    reports {
        xml.required.set(true)
        html.required.set(true)
    }
}

test {
    finalizedBy jacocoTestReport
}

group = 'fr.parisnanterre'
version = "0.3.1-SNAPSHOT"

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            groupId = 'fr.parisnanterre'
            artifactId = 'iqplaylib'
            version = version
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/IQPlay/library/")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
}

tasks.named('check').configure {
    dependsOn tasks.named('jacocoTestReport')
}

tasks.named('asciidoctor').configure {
    dependsOn tasks.named('asciidoctorPdf')
}
tasks.named('build').configure {
    dependsOn tasks.named('asciidoctor')
}
