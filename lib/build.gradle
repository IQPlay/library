/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10.2/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id "org.sonarqube" version "5.1.0.4882"
    id 'maven-publish'
    id 'jacoco'

    // For generate doc
    id 'org.asciidoctor.jvm.convert' version '4.0.2'
    id 'org.asciidoctor.jvm.pdf' version '4.0.2'
}

sonar {
    properties {
        property "sonar.projectKey", "IQPlay_library"
        property "sonar.organization", "iqplay"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation libs.junit

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api libs.commons.math3

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation libs.guava
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

asciidoctor {
    sourceDir = file('src/docs/')
    outputDir = file("${buildDir}/docs")
}

asciidoctorPdf {
    sourceDir = file('src/docs/')
    outputDir = file("${buildDir}/docs")
}

asciidoctorj {
    requires 'rouge'
    modules {
        diagram.use()
        diagram.version '1.5.16'
    }
    attributes 'build-gradle': file('build.gradle'),
            'sourcedir': project.sourceSets.main.java.srcDirs[0],
            'source-highlighter': 'rouge',
            'rouge-style': 'github',
            'rouge-theme': 'github'
}

jacoco {
    toolVersion = "0.8.12" // JaCoCo version
}
jacocoTestReport {
    reports {
        xml.required.set(true) // Necessary for badge services to read reports
        html.required.set(true)
    }
}
test {
    finalizedBy jacocoTestReport // Generates JaCoCo report after testing
}


group="fr.parisnanterre"
version="0.0.1"

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            groupId = 'com.iqplay'
            artifactId = 'iqplaylib'
            version = '1.0.0-SNAPSHOT' // SNAPSHOT pour les versions en d√©veloppement
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/IQPlay/library/")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
}

tasks.named('check').configure {
    dependsOn tasks.named('jacocoTestReport')
}
// edit the build task to generate the asciidoc pdf too
tasks.named('asciidoctor').configure {
    dependsOn tasks.named('asciidoctorPdf')
}
tasks.named('build').configure {
    dependsOn tasks.named('asciidoctor')
}
